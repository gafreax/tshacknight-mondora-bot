{"version":3,"sources":["../src/bot.js"],"names":["azure","require","connector","appId","appPassword","defaultAction","session","args","next","send","startBot","console","log","bot","azureTableClient","AzureTableClient","tableStorage","AzureBotStorage","gzipData","set","defaultLocale","dialog","endConversation","triggerAction","matches","text","results","endDialog","response","txt","message","phrase","company","slice","indexOf","length","toLowerCase","method","url","headers","then","companies","data","collection","companyFound","find","element","name","userData","worked","date","Date","post","currency","netAmount","vatAmount","lines","quantity","description","product","barred","departmentalDistribution","departmentalDistributionNumber","distributionType","self","productGroup","productGroupNumber","productNumber","salesPrice","paymentTerms","daysOfCredit","paymentTermsNumber","paymentTermsType","recipient","address","balance","city","contacts","corporateIdentificationNumber","country","countryCode","code","customerGroup","customerGroupNumber","email","italianCustomerType","lastUpdated","splitPayment","vatNumber","vatZone","vatZoneNumber","zip","customerNumber","catch","ex","map","cmp","join","listen"],"mappings":"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","file":"bot.js","sourcesContent":["import {\n    UniversalBot,\n    MemoryBotStorage,\n    LuisRecognizer,\n    IntentDialog,\n    ChatConnector,\n    AzureTableClient,\n    Session,\n    Prompts,\n    RegExpRecognizer\n} from 'botbuilder';\nimport {\n    LUIS_RECOGNIZER_URLS,\n    LUIS_INTENTS_THRESHOLD,\n    MICROSOFT_APP_ID,\n    MICROSOFT_APP_PASSWORD,\n    AZURE_STORAGE_KEY,\n    AZURE_TABLE_NAME,\n    AZURE_STORAGE_NAME,\n    DEFAULT_LOCALE\n} from './config';\nimport axios from 'axios';\nimport {\n    version\n} from '../package.json';\n\nvar azure = require('botbuilder-azure');\nimport {\n    load\n} from 'dotenv';\n\nconst connector = new ChatConnector({\n    appId: MICROSOFT_APP_ID,\n    appPassword: MICROSOFT_APP_PASSWORD\n});\nconst defaultAction = (session, args, next) => {\n    session.send('Come posso esserti utile?');\n}\nvar startBot = () => {\n    console.log('Starting bot...');\n    var bot = new UniversalBot(connector, defaultAction);\n    var azureTableClient = new azure.AzureTableClient(AZURE_TABLE_NAME, AZURE_STORAGE_NAME, AZURE_STORAGE_KEY);\n    var tableStorage = new azure.AzureBotStorage({\n        gzipData: false\n    }, azureTableClient);\n    bot.set('storage', tableStorage);\n    bot.set('persistConversationData', false);\n    bot.set('persistUserData', true);\n    bot.set('localizerSettings', {\n        defaultLocale: DEFAULT_LOCALE\n    });\n    bot.connector('*', connector);\n\n    bot.dialog('TestlDialog', (session) => {\n        session.endConversation('Ok, Test are OK');\n    }).triggerAction({\n        matches: /test/\n    });\n    bot.dialog('VersionDialog', (session) => {\n        session.endConversation('Version ' + version);\n    }).triggerAction({\n        matches: /version/\n    });\n    bot.dialog('FirstStart', [\n        (session) => {\n            Prompts.text(session, 'Qual\\'Ã¨ il tuo costo giornaliero?');\n        },\n        (session, results) => {\n            session.endDialog(`Memorizzato ${results.response}!`);\n        }\n    ]).triggerAction({\n        matches: /\\/start/\n    });\n    bot.dialog('DailyScrum',\n        (session) => {\n            const txt = session.message.text;\n            const phrase = 'oggi ho lavorato per';\n            var company = txt.slice(txt.indexOf(phrase) + phrase.length + 1).toLowerCase();\n            axios({\n                    method: 'get',\n                    url: 'https://rest.reviso.com/customers',\n                    headers: {\n                        \"X-AppSecretToken\": \"SxQv1oTvGSstuYIEKpgBDKbzMccUMVDBEhIeRUriY3M1 \",\n                        \"X-AgreementGrantToken\": \"VEvSFx42bWzeBSRP8PQ92xBvXEhbaWO79k9XsGlMelg1 \"\n                    },\n                })\n                .then(async (response) => {\n                    console.log('company ' + company);\n                    const companies = response.data.collection;\n                    const companyFound = companies.find(element => element.name.toLowerCase().indexOf(company) >= 0);\n                    if (companyFound) {\n                        await session.send('Consuntivato il lavoro per ' + companyFound.name);\n                        session.userData.worked = {};\n                        session.userData.worked.date = new Date();\n                        session.userData.worked.company = companyFound;\n\n                        axios.post('https://rest.reviso.com/v2/invoices/drafts', {\n\n                            method: 'post',\n                            data: {\n                                date: \"2018-01-01\",\n                                currency: \"EUR\",\n                                netAmount: 1000,\n                                vatAmount: 20,\n                                lines: [{\n                                    quantity: 1,\n                                    description: \"Fattura giornaliera del cliente \" + companyFound.name,\n                                    product: {\n                                        barred: false,\n                                        departmentalDistribution: {\n                                            departmentalDistributionNumber: 1,\n                                            distributionType: \"department\",\n                                            self: \"https://rest.reviso.com/departmental-distribution/departments/1\"\n                                        },\n                                        description: \"giornata\",\n\n                                        name: \"giornata\",\n\n                                        productGroup: {\n                                            productGroupNumber: 22,\n                                            self: \"https://rest.reviso.com/product-groups/22\"\n                                        },\n                                        productNumber: \"gg\",\n                                        salesPrice: 500,\n                                        self: \"https://rest.reviso.com/products/gg\"\n                                    }\n                                }],\n                                paymentTerms: {\n                                    daysOfCredit: 30,\n                                    name: \"30gg data fattura\",\n                                    paymentTermsNumber: 4,\n                                    paymentTermsType: \"net\",\n                                    self: \"https://rest.reviso.com/payment-terms/4\"\n                                },\n                                recipient: {\n                                    address: \"Piazza Spirito Santo\",\n                                    balance: 0,\n                                    city: \"CATANIA\",\n                                    contacts: \"https://rest.reviso.com/customers/1/contacts\",\n                                    corporateIdentificationNumber: \"02250850874\",\n                                    country: \"ITALIA\",\n                                    countryCode: {\n                                        code: \"IT\",\n                                        self: \"https://rest.reviso.com/country-codes/IT\"\n                                    },\n                                    currency: \"EUR\",\n                                    customerGroup: {\n                                        customerGroupNumber: 1,\n                                        self: \"https://rest.reviso.com/customer-groups/1\"\n                                    },\n                                    email: \"francesco.barbera@mondora.com\",\n                                    italianCustomerType: \"none\",\n                                    lastUpdated: \"2018-03-14T10:11:15Z\",\n                                    paymentTerms: {\n                                        paymentTermsNumber: 9,\n                                        self: \"https://rest.reviso.com/payment-terms/9\"\n                                    },\n                                    splitPayment: false,\n\n                                    vatNumber: \"02250850874\",\n                                    vatZone: {\n                                        vatZoneNumber: 1,\n                                        self: \"https://rest.reviso.com/vat-zones/1\"\n                                    },\n                                    zip: \"95124\",\n                                    customerNumber: 1,\n                                    name: \"Neri Franco & C. snc\",\n                                    self: \"https://rest.reviso.com/customers/1\"\n\n                                },\n                                \"customer\": {\n                                    address: \"Piazza Spirito Santo\",\n                                    balance: 0,\n                                    city: \"CATANIA\",\n                                    contacts: \"https://rest.reviso.com/customers/1/contacts\",\n                                    corporateIdentificationNumber: \"02250850874\",\n                                    country: \"ITALIA\",\n                                    countryCode: {\n                                        code: \"IT\",\n                                        self: \"https://rest.reviso.com/country-codes/IT\"\n                                    },\n                                    currency: \"EUR\",\n                                    customerGroup: {\n                                        customerGroupNumber: 1,\n                                        self: \"https://rest.reviso.com/customer-groups/1\"\n                                    },\n                                    email: \"francesco.barbera@mondora.com\",\n                                    italianCustomerType: \"none\",\n                                    lastUpdated: \"2018-03-14T10:11:15Z\",\n                                    paymentTerms: {\n                                        paymentTermsNumber: 9,\n                                        self: \"https://rest.reviso.com/payment-terms/9\"\n                                    },\n                                    splitPayment: false,\n\n                                    vatNumber: \"02250850874\",\n                                    vatZone: {\n                                        vatZoneNumber: 1,\n                                        self: \"https://rest.reviso.com/vat-zones/1\"\n                                    },\n                                    zip: \"95124\",\n                                    customerNumber: 1,\n                                    name: \"Neri Franco & C. snc\",\n                                    self: \"https://rest.reviso.com/customers/1\"\n\n\n                                }\n                            }\n                        }).catch(ex => console.log(ex));\n\n\n\n                        console.log(session.userData);\n                    } else {\n                        session.send('Nessuna azienda corrispondente, selezionane una fra le seguenti');\n                        session.send(companies.map(cmp => cmp.name).join('  \\n '));\n                    }\n                });\n\n        }\n    ).triggerAction({\n        matches: /oggi\\ ho\\ lavorato\\ per/\n    });\n    console.log('COPMPLETE ');\n    return connector.listen();\n};\n\nexport default startBot;\n"]}